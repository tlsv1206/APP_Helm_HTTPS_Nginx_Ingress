# STEP 0: Set up kubeconfig to access the correct EKS cluster
aws eks update-kubeconfig --region us-east-1 --name stage-eks-cluster

# STEP 1: Install cert-manager (for ACME/Let's Encrypt TLS certificates)
helm repo add jetstack https://charts.jetstack.io
helm repo update
helm search repo jetstack/cert-manager --versions

helm install cert-manager jetstack/cert-manager \
  --namespace cert-manager --create-namespace \
  --version v1.18.2 \
  --set crds.enabled=true

# Wait for cert-manager to be ready
kubectl rollout status deploy/cert-manager -n cert-manager --timeout=2m

# STEP 2: Install NGINX ingress controller (with admission webhooks disabled for cert-manager compatibility)
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm search repo ingress-nginx --versions

helm install nginx-ingress-controller ingress-nginx/ingress-nginx \
  --namespace nginx-ingress-controller --create-namespace \
  --version 4.13.0 \
  --set controller.ingressClass=nginx-ingress-controller \
  --set controller.ingressClassByName=true \
  --set controller.ingressClassResource.name=nginx-ingress-controller \
  --set controller.ingressClassResource.enabled=true \
  --set controller.service.type=LoadBalancer \
  --set controller.replicaCount=2 \
  --set controller.publishService.enabled=true \
  --set controller.extraArgs.enable-annotation-validation=false \
  --set admissionWebhooks.enabled=false

# (Optional) Get the external LoadBalancer hostname/IP for DNS setup
kubectl get svc -n nginx-ingress-controller

# STEP 3: Deploy ClusterIssuer for Let's Encrypt ACME configuration
helm install letsencrypt ./addons

# Verify ClusterIssuer creation
kubectl get ClusterIssuer

# STEP 4: Deploy the hello-world app with staging values
kubectl create namespace app-staging

helm install hello-world-staging ./ \
  --namespace app-staging \
  --create-namespace \
  -f ./values/values-staging.yaml

# STEP 5: Remove validating webhook (required when admission webhooks are disabled)
kubectl delete validatingwebhookconfiguration nginx-ingress-staging-ingress-nginx-admission || true
kubectl delete validatingwebhookconfiguration nginx-ingress-controller-ingress-nginx-admission || true

# STEP 6: Certificate and challenge troubleshooting/verification
kubectl get certificate -n app-staging
kubectl describe certificate hello-world-tls -n app-staging
kubectl get challenge -n app-staging
kubectl describe challenge <challenge-name> -n app-staging

# STEP 7: Update your domain's DNS A/ALIAS/CNAME record to point to the ALB hostname from the nginx ingress service